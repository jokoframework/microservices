version: '3.3'
services:
  eureka-server:
    build:
      context: .
      dockerfile: DockerFile-eureka-server
      args:
        JAR_FILE: eureka-server-0.0.1-SNAPSHOT.jar
    ports:
      - '8761:8761'
    environment:
      DEUREKA_SERVER: 'http://eureka-server:8761/eureka'
    networks:
      - micro
    image: 'joko/eureka-server'

  config-server:
    build:
      context: .
      dockerfile: DockerFile-config-server
      args:
        JAR_FILE: config-server-0.0.1-SNAPSHOT.jar
    ports:
      - '8888:8888'
    networks:
      - micro
    image: 'joko/config-server'

  microservice1:
    build:
      context: .
      dockerfile: DockerFile-microservice1
      args:
        JAR_FILE: microservice1-0.0.1-SNAPSHOT.jar
    ports:
      - '9950:9950'
    links:
      - config-server:config-server
      - eureka-server:eureka-server
    depends_on:
      - config-server
      - eureka-server
    networks:
      - micro
    environment:
      SPRING_APPLICATION_JSON: '{
          "server": {
            "port": 5555
          },
          "eureka": {
            "instance": {
              "preferIpAddress": true
            },
            "client": {
              "registerWithEureka": true,
              "fetchRegistry": true,
              "serviceUrl": {
                "defaultZone": "http://eureka-server:8761/eureka/"
              }
            }
          },
          "spring": {
            "application": {
              "name": "microservice1"
            },
            "profiles": {
              "active": "default"
            },
            "cloud": {
              "config": {
                "uri": "http://config-server:8888",
                "enabled": true
              }
            }
          }
        }'
    image: 'joko/microservice1'

  microservice2:
    build:
      context: .
      dockerfile: DockerFile-microservice2
      args:
        JAR_FILE: microservice2-0.0.1-SNAPSHOT.jar
    links:
      - config-server:config-server
      - eureka-server:eureka-server
    depends_on:
      - config-server
      - eureka-server
    networks:
      - micro
    environment:
      SPRING_APPLICATION_JSON: '{
            "server": {
              "port": 5555
            },
            "eureka": {
              "instance": {
                "preferIpAddress": true
              },
              "client": {
                "registerWithEureka": true,
                "fetchRegistry": true,
                "serviceUrl": {
                  "defaultZone": "http://eureka-server:8761/eureka/"
                }
              }
            },
            "spring": {
              "application": {
                "name": "microservice2"
              },
              "profiles": {
                "active": "default"
              },
              "cloud": {
                "config": {
                  "uri": "http://config-server:8888",
                  "enabled": true
                }
              }
            }
          }'
    image: 'joko/microservice2'

  cloud-gateway:
    build:
      context: .
      dockerfile: DockerFile-cloud-gateway
      args:
        JAR_FILE: cloud-gateway-0.0.1-SNAPSHOT.jar
    ports:
      - '5555:5555'
    links:
      - config-server:config-server
      - eureka-server:eureka-server
    depends_on:
      - config-server
      - eureka-server
      - microservice1
    networks:
      - micro
    image: 'joko/cloud-gateway'

networks:
  micro:
    driver: bridge